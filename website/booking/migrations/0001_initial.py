# Generated by Django 4.2.7 on 2024-02-18 23:26

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("ums", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active?"),
                ),
                ("code", models.CharField(max_length=15)),
                ("amount", models.IntegerField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
            },
            bases=(core.models.CloneableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="CustomContentBaseTypeModel",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active?"),
                ),
                ("object_id", models.UUIDField()),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
            bases=(core.models.CloneableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Features",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active?"),
                ),
                ("slug", models.SlugField()),
                ("title", models.CharField(max_length=240)),
                ("icon", models.CharField(max_length=120, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
            },
            bases=(core.models.CloneableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Gallery",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active?"),
                ),
                (
                    "images",
                    models.ImageField(
                        blank=True, null=True, upload_to="rooms/gallery/"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
            },
            bases=(core.models.CloneableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active?"),
                ),
                ("ref_code", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "ordered_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("ordered", models.BooleanField(default=False)),
                ("refund_requested", models.BooleanField(default=False)),
                ("refund_granted", models.BooleanField(default=False)),
                (
                    "coupon",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="booking.coupon",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
            },
            bases=(core.models.CloneableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Package",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active?"),
                ),
                ("slug", models.SlugField()),
                ("title", models.CharField(max_length=255)),
                ("short_desc", models.CharField(max_length=400)),
                ("long_desc", models.TextField(blank=True, null=True)),
                ("nos_of_guest", models.IntegerField(default=0)),
                (
                    "banner",
                    models.ImageField(
                        blank=True, null=True, upload_to="package/banner/"
                    ),
                ),
                (
                    "detail_banner_1",
                    models.ImageField(
                        blank=True, null=True, upload_to="package/detail_banner/"
                    ),
                ),
                (
                    "detail_banner_2",
                    models.ImageField(
                        blank=True, null=True, upload_to="package/detail_banner/"
                    ),
                ),
                (
                    "detail_banner_3",
                    models.ImageField(
                        blank=True, null=True, upload_to="package/detail_banner/"
                    ),
                ),
                (
                    "caution_fee",
                    models.DecimalField(
                        decimal_places=4, help_text="the caution fee", max_digits=19
                    ),
                ),
                (
                    "extra_guest_fee",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="the cost of extra guest",
                        max_digits=19,
                    ),
                ),
                (
                    "day_weekday_price",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="weekday day booking price",
                        max_digits=19,
                    ),
                ),
                (
                    "overnight_weekday_price",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="weekday overnight booking price",
                        max_digits=19,
                    ),
                ),
                (
                    "day_weekend_price",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="weekend day booking price",
                        max_digits=19,
                    ),
                ),
                (
                    "overnight_weekend_price",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="weekend overnight booking price",
                        max_digits=19,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                ("features", models.ManyToManyField(blank=True, to="booking.features")),
                (
                    "gallery",
                    models.ManyToManyField(
                        blank=True, related_name="package_gallery", to="booking.gallery"
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
            },
            bases=(core.models.CloneableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active?"),
                ),
                ("slug", models.SlugField()),
                ("title", models.CharField(max_length=255)),
                ("short_desc", models.CharField(max_length=400)),
                ("long_desc", models.TextField(blank=True, null=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="the cost of the room",
                        max_digits=19,
                    ),
                ),
                (
                    "discount_price",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="the cost of the room",
                        max_digits=19,
                    ),
                ),
                (
                    "caution_fee",
                    models.DecimalField(
                        decimal_places=4, help_text="the caution fee", max_digits=19
                    ),
                ),
                ("availability", models.IntegerField(default=1)),
                ("check_in", models.CharField(max_length=240, null=True)),
                ("check_out", models.CharField(max_length=240, null=True)),
                (
                    "banner",
                    models.ImageField(blank=True, null=True, upload_to="rooms/banner/"),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="rooms/thumbnail/"
                    ),
                ),
                ("featured", models.BooleanField(default=False)),
                (
                    "template_view",
                    models.TextField(
                        choices=[("normal", "normal"), ("inverted", "inverted")],
                        default="normal",
                        verbose_name="template_view",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "featured_feat",
                    models.ManyToManyField(
                        blank=True,
                        related_name="featured_features",
                        to="booking.features",
                    ),
                ),
                (
                    "features",
                    models.ManyToManyField(
                        blank=True, related_name="features", to="booking.features"
                    ),
                ),
                (
                    "gallery",
                    models.ManyToManyField(
                        blank=True, related_name="room_gallery", to="booking.gallery"
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
            },
            bases=(core.models.CloneableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="RoomReview",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active?"),
                ),
                ("full_name", models.CharField(blank=True, max_length=240, null=True)),
                (
                    "tag",
                    models.TextField(
                        choices=[
                            ("Comfort", "Comfort"),
                            ("Facilities", "Facilities"),
                            ("Location", "Location"),
                            ("Price", "Price"),
                        ],
                        default="Comfort",
                        verbose_name="tag",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=240, null=True)),
                ("review", models.TextField(blank=True, null=True)),
                ("rating", models.IntegerField(default=0)),
                (
                    "status",
                    models.TextField(
                        choices=[
                            ("Uploading", "Uploading"),
                            ("Submitted", "Submitted"),
                            ("In Review", "In Review"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                            ("Removed", "Removed"),
                        ],
                        default="Approved",
                        verbose_name="status",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booking.room",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
            },
            bases=(core.models.CloneableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Refund",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active?"),
                ),
                ("reason", models.TextField()),
                ("accepted", models.BooleanField(default=False)),
                ("email", models.TextField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="booking.order"
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
            },
            bases=(core.models.CloneableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active?"),
                ),
                ("txn_code", models.CharField(max_length=50)),
                ("amount", models.IntegerField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ums.profile",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
            },
            bases=(core.models.CloneableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="PackageComplimentary",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active?"),
                ),
                ("number", models.IntegerField(default=1)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
                (
                    "package",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="package",
                        to="booking.package",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="room",
                        to="booking.room",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
            },
            bases=(core.models.CloneableMixin, models.Model),
        ),
        migrations.AddField(
            model_name="order",
            name="payment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="booking.payment",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="ums.profile",
            ),
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "customcontentbasetypemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="booking.customcontentbasetypemodel",
                    ),
                ),
                ("ordered", models.BooleanField(default=False)),
                (
                    "item_type",
                    models.TextField(
                        choices=[("room", "room"), ("package", "package")],
                        default="room",
                        verbose_name="product_type",
                    ),
                ),
                (
                    "package_price_option",
                    models.TextField(
                        choices=[
                            ("day_weekday", "day_weekday"),
                            ("overnight_weekday", "overnight_weekday"),
                            ("day_weekend", "day_weekend"),
                            ("overnight_weekend", "overnight_weekend"),
                        ],
                        null=True,
                        verbose_name="package_option",
                    ),
                ),
                ("quantity", models.IntegerField(default=1)),
                ("check_in", models.DateTimeField(null=True)),
                ("check_out", models.DateTimeField(null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ums.profile",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
            },
            bases=("booking.customcontentbasetypemodel",),
        ),
        migrations.AddField(
            model_name="order",
            name="items",
            field=models.ManyToManyField(to="booking.orderitem"),
        ),
    ]
